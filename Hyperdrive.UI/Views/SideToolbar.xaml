<UserControl x:Class="Hyperdrive.UI.Views.SideToolbar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Hyperdrive.UI.Views"
             xmlns:hui="clr-namespace:Hyperdrive.UI.ValueConverters"
             xmlns:tlbr="clr-namespace:Hyperdrive.UI.Views.SideToolbars"
             mc:Ignorable="d" 
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <hui:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />

        <DataTemplate x:Key="BlankUserControl" DataType="{x:Type tlbr:BlankUserControl}" >
            <tlbr:BlankUserControl />
        </DataTemplate>
        <DataTemplate x:Key="PageCountToolbar" DataType="{x:Type tlbr:PageCountToolbar}" >
            <tlbr:PageCountToolbar />
        </DataTemplate>
        <DataTemplate x:Key="LetterTabloidResizerToolbar" DataType="{x:Type tlbr:LetterTabloidResizerToolbar}" >
            <tlbr:LetterTabloidResizerToolbar />
        </DataTemplate>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#FF007ACC"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource MainBorderBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <StackPanel Orientation="Vertical" >
                                <Rectangle x:Name="topRectangle" Height="5" Fill="{TemplateBinding BorderBrush}" />
                                <TextBlock x:Name="textBox" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                                <ContentPresenter Visibility="Collapsed" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="topRectangle" Value="{StaticResource BlueHighlightBrush}"/>
                                <Setter Property="Foreground" TargetName="textBox" Value="{StaticResource BlueHighlightBrush}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Fill" TargetName="topRectangle" Value="{StaticResource BlueHighlightBrush}"/>
                                <Setter Property="Foreground" TargetName="textBox" Value="{StaticResource BlueHighlightBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="topRectangle" Value="{StaticResource LightBlueHighlightBrush}"/>
                                <Setter Property="Foreground" TargetName="textBox" Value="{StaticResource LightBlueHighlightBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="topRectangle" Value="{StaticResource MainBorderBrush}"/>
                                <Setter Property="Foreground" TargetName="textBox" Value="{StaticResource MainBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    
    <Grid HorizontalAlignment="Right">
        <Grid.ColumnDefinitions >
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" Visibility="{Binding CurrentToolbarIndex, Converter={StaticResource IntToVisibilityConverter}}" >
            <Rectangle Width="1" Fill="{StaticResource MainBorderBrush}" />
            <Border Width="250" Background="{StaticResource BackgroundMainBrush}" Padding="6 6 2 16" >
                <Border Background="{StaticResource BackgroundDarkBrush}" BorderBrush="{StaticResource MainBorderBrush}" BorderThickness="1" >
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Height="28" Background="{StaticResource BackgroundMainBrush}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Page Count"  Foreground="White" VerticalAlignment="Center" Margin="8 0" />
                            <Button Grid.Column="1" Click="ExitSideToolbar_Click"  Width="25" Content="X" Style="{StaticResource WindowControlButton}" Padding="7" />
                        </Grid>
                        <ContentControl Grid.Row="1" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.bIsFileOpen}" Content="{Binding CurrentToolbarIndex}" >
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource BlankUserControl}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentToolbarIndex}" Value="1">
                                            <Setter Property="ContentTemplate" Value="{StaticResource PageCountToolbar}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CurrentToolbarIndex}" Value="2">
                                            <Setter Property="ContentTemplate" Value="{StaticResource LetterTabloidResizerToolbar}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Grid>
                </Border>
            </Border>
        </StackPanel>
        <Border Grid.Column="1" Width="30" Background="{StaticResource BackgroundMainBrush}">
            <StackPanel Orientation="Vertical">
                <ToggleButton Content="Page Count" HorizontalAlignment="Right" BorderThickness="0" Margin="0 5"
                            Width="80" Height="28" Background="Transparent" Foreground="{StaticResource ForegroundLightBrush}" Style="{DynamicResource ToggleButtonStyle1}"
                              Click="PageCount_Click" IsChecked="{Binding bPageCountOpen, Mode=OneWay}">
                    <ToggleButton.LayoutTransform>
                        <RotateTransform Angle="90" />
                    </ToggleButton.LayoutTransform>
                </ToggleButton>
                <ToggleButton Content="Resizer" HorizontalAlignment="Right" BorderThickness="0" Margin="0 5"
                            Width="65" Height="28" Background="Transparent" Foreground="{StaticResource ForegroundLightBrush}" Style="{DynamicResource ToggleButtonStyle1}"
                              Click="LetterTabloidResizer_Click" IsChecked="{Binding bLetterTabloidResizerOpen, Mode=OneWay}">
                    <ToggleButton.LayoutTransform>
                        <RotateTransform Angle="90" />
                    </ToggleButton.LayoutTransform>
                </ToggleButton>

            </StackPanel>
        </Border>
    </Grid>
</UserControl>
